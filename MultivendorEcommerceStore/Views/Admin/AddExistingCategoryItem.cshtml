@model MultivendorEcommerceStore.DB.ViewModel.AddExistingCategoryItemViewModel

@{
    ViewBag.Title = "AddExistingCategoryItem";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <section class="panel">
            <header class="panel-heading">
                Add New SubCategory Items
            </header>
            <div class="panel-body">
                <div class="form">
                    <h2 style="text-align:center">Add New SubCategory Items</h2>

                    @using (Html.BeginForm("AddExistingCategoryItem", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="cmxform form-horizontal tasi-form">

                            <h4 style="text-align:center">For DisplayOrder 1</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(Model => Model.CategoryID,
                                    (SelectList)ViewBag.CategoryDropDown,
                                    "--Select Category--",
                                    new { @class = "form-control", @id = "SelectedCategory" })
                                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SubCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(Model => Model.SubCategoryID,
                                    new SelectList(string.Empty, "Value", "Text"),
                                    "--Select Sub Category--",
                                    new { @class = "form-control", @id = "SubCategory" })
                                    @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SubCategoryItem, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.SubCategoryItem, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SubCategoryItem, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </section>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section Scripts {

    <script type="text/javascript">

        $("#SelectedCategory").change(function () {
            var categoryId = $('#SelectedCategory').val();
            $.ajax({
                url: "/Product/SubCategoriesByCategoryID/" + categoryId,
                type: "Get",
                contentType: "application/json; charset=utf-8",
                datatype: 'JSON',
                success: function (data) {
                    $('#SubCategory').empty();
                    for (var i = 0; i < data.subcategory.length; i++) {
                        $('#SubCategory').append("<option value= " + data.subcategory[i].Value + ">" + data.subcategory[i].Text + "</option>");
                    }
                }
            });
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
