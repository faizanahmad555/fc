@model MultivendorEcommerceStore.DB.ViewModel.AddProductViewModel
@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>AddProduct</h2>

@using (Html.BeginForm("AddProduct", "Supplier", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ADD New Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* <input type="hidden" name="SupplierID" value="@ViewBag.SupplierID" />*@

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(Model => Model.CategoryID,
                    (SelectList)ViewBag.CategoryDropDown,
                    "--Select Category--",
                    new { @class = "form-control", @id = "SelectedCategory" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(Model => Model.SubCategoryID,
                    new SelectList(string.Empty, "Value", "Text"),
                    "--Select State--",
                    new { @class = "form-control", @id = "SubCategory" })
                @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section Scripts {
    <script type="text/javascript">
        $("#SelectedCategory").change(function () {
            var categoryId = $('#SelectedCategory').val();
            $.ajax({
                url: "/Supplier/SubCategoriesByCategoryID/" + categoryId,
                type: "Get",
                contentType: "application/json; charset=utf-8",
                datatype: 'JSON',
                success: function (data) {
                    $('#SubCategory').empty();
                    for (var i = 0; i < data.subcategory.length; i++) {
                        $('#SubCategory').append("<option value= " + data.subcategory[i].Value + ">" + data.subcategory[i].Text + "</option>");
                    }
                }
            });
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
